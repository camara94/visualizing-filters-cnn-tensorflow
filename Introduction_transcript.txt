Welcome to the sky did project on visualizing filters
off a convolution of neural network using TensorFlow.
My name is Amit, and I'll be your guide for this project.
In this guided project, we will use a CNN are a convolution
neural net correct and specifically the popular V G
16 architectures.
And we will visualize various filters from different layers
off this network.
And why would we want to do something like that?
Well, it's a great idea to try and visualize filters
to understand what those filters are looking for in the input.
This will not only help you develop a deeper understanding
off the con nets, but this can also be pretty useful when
using the networks for various tasks including, for example,
neuro style transfer.
On the landing page here you will see a collapsed notebook
open. This is the notebook that we will be using
in this project, and you will see that four filters
are visualized here and this is essentially what we're going
to achieve now.
These images are being generated by an algorithm that we
will right, and the idea off that algorithm is too generate
images which maximally activate a specific filters
off specific layers.
So for this particular, uh, image that you see this pattern
and this image maximally activates 28th filter on first
convolution layer on block three off BGC 16.
So you get the ideas.
That's basically what we're trying to understand what
we're going to try and understand in this project.
Similarly, you have this, uh, slightly more complex pattern
for which maximally activates this specific filter
for this specific layer on this block.
Alright, Eso we will be using TensorFlow as our machine
learning framework.
The project uses the Google collapse environment as you
can see here, which is a fantastic tool for creating
and running Jupiter notebooks in the cloud.
And we can even use free GP use for our notebooks.
If you're using Google collapse, you will need prior
programming experience in python.
This is a practical hands on guided project for learners who
already have theoretical understanding off neural networks.
On and off course, you should ideally have a theoretical
understanding off convolution, neural networks
and optimization algorithms like creating dissent.
It will also help if you have used TensorFlow and curious
before.
But if you have not and have understanding off CNN's neural
networks in general and optimization algorithms like Radian
descent.
Then you shouldn't have any problem following along,
because essentially what we're going to do in this project is
very similar to Grady in dissent.
We're using the Rhyme platform for this project so that you
can watch the recorded instructions on the right hand side
of your screen and be able to follow along in the bigger
window on the left hand side of your screen.
At the same time, my recording on the right hand side
can be paused at any time, and you can go back to any
of the tasks from the drop down menu on the top
of the recording.
You can also change the playback speed from the play bar
at the bottom, in case I'm going too fast or too slow for you.
You can resize or dark the right window as you see fit,
and you can also scroll the recorded video left and right
by simply clicking and dragging on it.
When the Rhyme interface launches, you will see a browser
with the starter notebook already open in the left window.
Public collapse notebooks are not suitable, though, so you
will have to make a copy off this notebook in your own Google
drive. And to do that, of course, you will have to log
into Google and then click on this copy to drive button.
So let's continue to the next task and start working
on this project.
But make sure you have locked into Google and have created
a copy off this notebook by clicking on this button.
If you have not, please pause my recording and do that first
once you're logged in and once you have created a copy,
joined me in the next task.